user nginx;
# Ideally # of worker processes = # of CPUs or cores
# Set to auto to autodetect
# max_clients = worker_processes * worker_connections
worker_processes auto;

# Maximum number of open file descriptors per process
# should be > worker_connections
worker_rlimit_nofile 10240;

events {
}


http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent"';

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

		upstream grpcservers {
				# The docker endpoint of your grpc servers, you can have multiple here
				server grpcserver:50051;
		}
 
    server {
        # listen 80 http2;
				listen 1443 ssl http2;
		
				# Create a certificate that points to the hostname, e.g. nginx for docker
				# $ openssl req -nodes -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -subj '/CN=nginx'
				ssl_certificate     /run/secrets/nginx.cert;
				ssl_certificate_key /run/secrets/nginx.key;
 
        location /echo.EchoService {
            # Replace localhost:50051 with the address and port of your gRPC server
            # The 'grpc://' prefix is optional; unencrypted gRPC is the default
            # grpc_pass grpc://grpcserver:50051;
						grpc_pass grpcs://grpcservers;
        }
    }
}